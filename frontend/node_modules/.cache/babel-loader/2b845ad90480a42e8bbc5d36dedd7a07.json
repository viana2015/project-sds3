{"ast":null,"code":"var _jsxFileName = \"/Users/cristianoviana/Documents/cursos/ws-devsuperiro/projeto-sds3/frontend/src/components/DonutChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    series: []\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => x.sum);\n      setChartData({\n        labels: myLabels,\n        series: mySeries\n      });\n    });\n  }, []);\n  /*const mockData = {\n      series: [477, 499, 444, 220, 473],\n      labels: ['Maxuel', 'Romulo', 'Rodrigo', 'Ricardo', 'Luciano']\n  }*/\n\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: chartData.labels\n    },\n    series: chartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DonutChart, \"aUQ8RMGL8CCZbUkZS1EfKr7vfts=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["/Users/cristianoviana/Documents/cursos/ws-devsuperiro/projeto-sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","useEffect","useState","Chart","BASE_URL","DonutChart","chartData","setChartData","labels","series","get","then","response","data","myLabels","map","x","sellerName","mySeries","sum","options","legend","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAY;AAAEM,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAZ,CAA1C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEN,QAAS,yBAAtB,EACCO,IADD,CACMC,QAAQ,IAAI;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AAEAZ,MAAAA,YAAY,CAAC;AAAEC,QAAAA,MAAM,EAAEM,QAAV;AAAoBL,QAAAA,MAAM,EAAES;AAA5B,OAAD,CAAZ;AAEH,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA;AACJ;AACA;AACA;;AAEI,QAAME,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcZ,MAAAA,MAAM,EAAEF,SAAS,CAACE;AAAhC,KADb;AAEI,IAAA,MAAM,EAAEF,SAAS,CAACG,MAFtB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAnCH;;GAAMJ,U;;KAAAA,U;AAqCJ,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSum } from 'types/sale';\nimport { BASE_URL } from 'utils/request';\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\nconst DonutChart = () => {\n   \n    const [chartData, setChartData] = useState<ChartData>({ labels: [], series: [] })\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\n        .then(response => {\n            const data = response.data as SaleSum[];\n            const myLabels = data.map(x => x.sellerName);\n            const mySeries = data.map(x => x.sum);\n\n            setChartData({ labels: myLabels, series: mySeries });\n            \n        });\n    },[]);\n   \n    /*const mockData = {\n        series: [477, 499, 444, 220, 473],\n        labels: ['Maxuel', 'Romulo', 'Rodrigo', 'Ricardo', 'Luciano']\n    }*/\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n\n    return (\n        <Chart\n            options={{ ...options, labels: chartData.labels}}\n            series={chartData.series}\n            type=\"donut\"\n            height=\"240\"\n        />\n    );\n  }\n  \n  export default DonutChart;"]},"metadata":{},"sourceType":"module"}